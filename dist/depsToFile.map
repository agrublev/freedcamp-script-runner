{"version":3,"sources":["depsToFile.js"],"names":["fetch","require","asyncForEach","array","callback","index","length","start","ssss","Promise","resolve","num","then","response","status","console","warn","Error","json","data","parseInt","size","dependencySizes","forEach","sz","approximateSize","bits","base","log"],"mappings":";AAqGK,aA7CL,IAAA,EAAA,EAAA,QAAA,aA6CK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlEL,MAAMA,EAAQC,QAAQ,cAuBtB,eAAeC,EAAcC,EAAOC,GAC3B,IAAA,IAAIC,EAAQ,EAAGA,EAAQF,EAAMG,OAAQD,UAChCD,EAASD,EAAME,GAAQA,EAAOF,GAI5C,MAAMI,EAAQ,gBACJL,EACF,CACI,gEACA,mEACA,kEACA,4DACA,kEACA,iEACA,8DAEJ,MAAA,IACQM,IAAAA,QAAa,IAAIC,QAAQC,IACzBV,EAAMW,GACLC,KAAK,SAASC,GACPA,GAAAA,EAASC,QAAU,IAEb,MADNC,QAAQC,KAAKH,GACP,IAAII,MAAM,4BAEbJ,OAAAA,EAASK,SAEnBN,KAAK,SAASO,GACPZ,IAAAA,EAAQa,SAASD,EAAKE,MACtBF,EAAKG,iBACLH,EAAKG,gBAAgBC,QAAQC,IACzBjB,GAASa,SAASI,EAAGC,mBAG7BV,QAAQC,KAAK,OAASL,GAAK,EAASJ,EAAAA,SAAAA,EAAO,CAAEmB,MAAM,EAAMC,KAAM,MAC/DjB,EAAQS,OAGhBJ,QAAQa,IAAIjB,GAAK,EAASH,EAAAA,SAAAA,EAAKa,SAGvCN,QAAQa,IAAI,SAEhBrB","file":"depsToFile.map","sourceRoot":"../src","sourcesContent":["// const getPackagesStats = require(\"./utils/deps/getPackagesStats.js\"); // const Conf = require(\"conf\");\n// // const store = new Conf(\"deps\");\n// // const filesize = require(\"filesize\");\n// // const { writeJson } = require(\"./utils/index.js\");\n// // // Loop over all stored values\n// // let deps = store.get(\"deps\");\n// // writeJson(\"files.json\", deps);\n// // Object.keys(deps).forEach(e => {\n// //     // console.log(JSON.stringify(deps[e]).length);\n// //     let dep = deps[e];\n// //     let total = 0;\n// //     Object.keys(dep).forEach(z => {\n// //         total += parseInt(dep[z].size);\n// //     });\n// //     console.warn(e, filesize(total, { bits: true }));\n// // });\n//\n// const Conf = require(\"conf\");\n// const store = new Conf(\"deps\");\n// let deps = store.get(\"deps\");\n// // const filesize = require(\"filesize\");\n// const { writeJson } = require(\"./utils/index.js\");\n// // Loop over all stored values\n// writeJson(\"filesz.json\", deps);\n// // for (let dep in deps) {\n// //     console.warn(\"-- Console DWE\", dep);\n// //     console.warn(dep, filesize(getPackagesStats(deps[dep]).size));\n// // }\n// // console.log(JSON.stringify(deps[e]).length);\n// // let dep = deps[\"parcel\"];\n// // Object.keys(deps).forEach(z => {\n// //     total += parseInt(deps[z].size);\n// // });\n// // console.warn(\"parcel\", filesize(total, { bits: true }));\n// // });\nconst fetch = require(\"node-fetch\");\n// fetch(\"https://bundlephobia.com/api/size?package=fkit&record=true\") //https://registry.npmjs.org/check\n//     .then(function(response) {\n//         if (response.status >= 400) {\n//             throw new Error(\"Bad response from server\");\n//         }\n//         return response.json();\n//     })\n//     .then(function(stories) {\n//         console.log(stories);\n//     });\n// fetch(\"https://bundlephobia.com/api/size?package=parcel&record=true\") //https://registry.npmjs.org/check\n//     .then(function(response) {\n//         if (response.status >= 400) {\n//             throw new Error(\"Bad response from server\");\n//         }\n//         return response.json();\n//     })\n//     .then(function(stories) {\n//         console.log(stories);\n//     });\nimport filesize from \"filesize\";\n\nasync function asyncForEach (array, callback) {\n    for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n    }\n}\n\nconst start = async () => {\n    await asyncForEach(\n        [\n            \"https://bundlephobia.com/api/size?package=burrito&record=true\",\n            \"https://bundlephobia.com/api/size?package=source-map&record=true\",\n            \"https://bundlephobia.com/api/size?package=commander&record=true\",\n            \"https://bundlephobia.com/api/size?package=tap&record=true\",\n            \"https://bundlephobia.com/api/size?package=uglify-js&record=true\",\n            \"https://bundlephobia.com/api/size?package=traverse&record=true\",\n            \"https://bundlephobia.com/api/size?package=antd&record=true\"\n        ],\n        async num => {\n            let ssss = await new Promise(resolve => {\n                fetch(num) //https://registry.npmjs.org/check\n                .then(function(response) {\n                    if (response.status >= 400) {\n                        console.warn(response);\n                        throw new Error(\"Bad response from server\");\n                    }\n                    return response.json();\n                })\n                .then(function(data) {\n                    let start = parseInt(data.size);\n                    if (data.dependencySizes) {\n                        data.dependencySizes.forEach(sz => {\n                            start += parseInt(sz.approximateSize);\n                        });\n                    }\n                    console.warn(\"!!!!\" + num, filesize(start, { bits: true, base: 10 }));\n                    resolve(data);\n                });\n            });\n            console.log(num, filesize(ssss.size));\n        }\n    );\n    console.log(\"Done\");\n};\nstart();\n"]}